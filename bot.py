from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, MessageHandler, filters, ContextTypes, ConversationHandler
import os

# –¢–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∞
TOKEN = os.getenv("TELEGRAM_TOKEN", "8350872775:AAHAyQAvOooptvSx8xG-QbmgAJpGRvtUaBo")
ADMIN_ID = "6978852648"

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
NAME, BUSINESS, GOAL, BUDGET = range(4)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if 'started' not in context.user_data:
        context.user_data['started'] = True
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –õ–µ–æ–Ω–∏–¥ (@shvorob_leonid), –ø–æ–º–æ–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å! üöÄ "
            "–û—Ç–≤–µ—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã —è —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏–ª –≤—Å—é –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. "
            "–ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –∑–∞–ø–æ–ª–Ω–∏—à—å, —è —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π, –∏ –º—ã –≤—Å—ë –æ–±—Å—É–¥–∏–º. üòä –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?"
        )
        return NAME
    return None

async def name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–ö–∞–∫–æ–π —É —Ç–µ–±—è –±–∏–∑–Ω–µ—Å? (–ù–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω, —É—Å–ª—É–≥–∏, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ)")
    return BUSINESS

async def business(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['business'] = update.message.text
    await update.message.reply_text("–ß—Ç–æ —Ö–æ—á–µ—à—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å? (–ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞—è–≤–∫–∏, —Ä–∞—Å—Å—ã–ª–∫–∏, —É—á–µ—Ç)")
    return GOAL

async def goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['goal'] = update.message.text
    await update.message.reply_text("–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é? (–ü—Ä–∏–º–µ—Ä: 50-100 —Ç—ã—Å. —Ä—É–±.)")
    return BUDGET

async def budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['budget'] = update.message.text
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    message = (
        f"üì© –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!\n"
        f"üë§ –ò–º—è: {context.user_data['name']}\n"
        f"üè¢ –ë–∏–∑–Ω–µ—Å: {context.user_data['business']}\n"
        f"üéØ –¶–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: {context.user_data['goal']}\n"
        f"üí∞ –ë—é–¥–∂–µ—Ç: {context.user_data['budget']}"
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=message)
    
    # –ú–µ–Ω—é
    keyboard = [
        [KeyboardButton("‚ÑπÔ∏è –û–±–æ –º–Ω–µ"), KeyboardButton("üåê –°–æ—Ü—Å–µ—Ç–∏")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –Ø –ø–æ–ª—É—á–∏–ª —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Å—å. üòä –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é:", reply_markup=reply_markup)
    return ConversationHandler.END

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ÑπÔ∏è –Ø –õ–µ–æ–Ω–∏–¥, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é no-code/low-code —Ä–µ—à–µ–Ω–∏—è, —á—Ç–æ–±—ã —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å —Ä–∞–±–æ—Ç–∞–ª —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ! üöÄ"
    )

async def socials(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üåê –ú–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏:\n"
        "üí¨ Telegram: @shvorob_leonid\n"
        "üì∏ Instagram: @shvorob_leonid"
    )

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

def main():
    app = Application.builder().token(TOKEN).build()
    
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.TEXT & ~filters.COMMAND, start)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, name)],
            BUSINESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, business)],
            GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, goal)],
            BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, budget)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    
    app.add_handler(conv_handler)
    app.add_handler(MessageHandler(filters.Regex("^(‚ÑπÔ∏è –û–±–æ –º–Ω–µ)$"), about))
    app.add_handler(MessageHandler(filters.Regex("^(üåê –°–æ—Ü—Å–µ—Ç–∏)$"), socials))
    
    app.run_polling()

if __name__ == "__main__":
    main()
